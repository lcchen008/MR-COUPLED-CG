#include <iostream>
using namespace std;
#include "lib\scheduler.h"
#include "kmeans.h"
#include "lib\util_host.h"
#include <time.h>

#define GRIDSZ 1000
#define OFFSETS 100

int main()
{
	Kernelfile file;
	char filename[] = "data2000.txt";
	file.open(filename);
	int size = file.size();

	char *filebuf = new char[size+1];
	memcpy(filebuf, file.source(), size);
	filebuf[size] = '\0';

	vector<unsigned int> offsets;
	unsigned int offset = 0;

	FILE *fp = fopen(filename, "r");

	bool in_word = false;
	char ch;

	do
	{
		ch = fgetc(fp);	
		if(ch==EOF)
			break;
		if(ch>='a'&&ch<='z'
			||ch>='0'&&ch<='9'
			||ch>='A'&&ch<='Z')
		{
			if(!in_word)
			{
				in_word = true;
				offsets.push_back(offset);
			}
		}
		else
		{
			if(in_word)
			{
				in_word = false;
				filebuf[offset] = '\0';
			}
		}
		offset++;
	}while(ch!=EOF)

	Scheduler scheduler(filebuf, size+1, &offsets[0], offsets.size(), sizeof(int));
	scheduler.do_mapreduce();

	int a;
	std::cout<<"Enter any number to continue..."<<std::endl;
	std::cin>>a;
}
